{"version":3,"sources":["views/Question.tsx","views/result.tsx","App.tsx","web-build/register-service-worker.js"],"names":["QuestionScreen","navigation","View","style","flex","justifyContent","alignItems","Text","flexDirection","Button","title","onPress","navigate","isCorrect","ResultScreen","route","params","Stack","createStackNavigator","MyStack","NavigationContainer","Navigator","screenOptions","headerShown","Screen","name","component","navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error","console"],"mappings":"0IAGe,SAASA,EAAT,GAAuC,IAAdC,EAAa,EAAbA,WACpC,OACE,gBAACC,EAAA,EAAD,CAAMC,MAAO,CACXC,KAAM,EACNC,eAAgB,SAChBC,WAAW,WAEX,gBAACC,EAAA,EAAD,kBACA,gBAACL,EAAA,EAAD,CAAMC,MAAO,CACTC,KAAM,EAAGI,cAAe,MACxBH,eAAgB,SAChBC,WAAW,WAEX,gBAACJ,EAAA,EAAD,KACI,gBAACO,EAAA,EAAD,CACAC,MAAM,QACNC,QAAS,kBAAMV,EAAWW,SAAS,SAAU,CAACC,WAAW,OAEzD,gBAACJ,EAAA,EAAD,CACAC,MAAM,QACNC,QAAS,kBAAMV,EAAWW,SAAS,SAAU,CAACC,WAAW,QAG7D,gBAACX,EAAA,EAAD,KACI,gBAACO,EAAA,EAAD,CACAC,MAAM,QACNC,QAAS,kBAAMV,EAAWW,SAAS,SAAU,CAACC,WAAW,OAEzD,gBAACJ,EAAA,EAAD,CACAC,MAAM,UACNC,QAAS,kBAAMV,EAAWW,SAAS,SAAU,CAACC,WAAW,UC9B1D,SAASC,EAAT,GAA8C,IAAtBC,EAAqB,EAArBA,MAAOd,EAAc,EAAdA,WAElCY,EAAcE,EAAMC,OAApBH,UAUR,OACE,gBAACX,EAAA,EAAD,KARMW,EACO,gBAACN,EAAA,EAAD,mBAEA,gBAACA,EAAA,EAAD,uBAOX,gBAACE,EAAA,EAAD,CACEC,MAAM,OACNC,QAAS,kBAAMV,EAAWW,SAAS,gBCpB7C,kCAMA,IAAMK,EAAQC,cAEC,SAASC,IACtB,OACE,gBAACC,EAAA,EAAD,KACE,gBAACH,EAAMI,UAAP,CACEC,cAAe,CACbC,aAAa,IAEf,gBAACN,EAAMO,OAAP,CAAcC,KAAK,WAAWC,UAAW1B,IACzC,gBAACiB,EAAMO,OAAP,CAAcC,KAAK,SAASC,UAAWZ,Q,+DCd3C,kBAAmBa,WACrBC,OAAOC,iBAAiB,QAAQ,WAC9BF,UAAUG,cACPC,SAAS,0BAA2B,CAAEC,MAAO,MAC7CC,MAAK,SAASC,OAGdC,OAAM,SAASC,GACdC,QAAQH,KAAK,oCAAqCE,W","file":"static/js/app.0d248421.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport { View, Text, Button } from \"react-native\";\r\n\r\nexport default function QuestionScreen({navigation}) {\r\n    return (\r\n      <View style={{\r\n        flex: 1, \r\n        justifyContent: 'center',\r\n        alignItems:'center',\r\n    }}>\r\n        <Text>This is: </Text>\r\n        <View style={{\r\n            flex: 1, flexDirection: 'row',\r\n            justifyContent: 'center',\r\n            alignItems:'center',\r\n        }}>\r\n            <View>\r\n                <Button\r\n                title=\"Wrong\"\r\n                onPress={() => navigation.navigate('Result', {isCorrect: false})}\r\n                />\r\n                <Button\r\n                title=\"Wrong\"\r\n                onPress={() => navigation.navigate('Result', {isCorrect: false})}\r\n                />\r\n            </View>\r\n            <View>\r\n                <Button\r\n                title=\"Wrong\"\r\n                onPress={() => navigation.navigate('Result', {isCorrect: false})}\r\n                />\r\n                <Button\r\n                title=\"Correct\"\r\n                onPress={() => navigation.navigate('Result', {isCorrect: true})}\r\n                />\r\n            </View>\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n  ","import * as React from 'react';\r\nimport { View, Text, Button } from \"react-native\";\r\n\r\nexport default function ResultScreen({ route, navigation }) {\r\n\r\n    const { isCorrect } = route.params;\r\n\r\n    const displayResult = () => {\r\n        if (isCorrect) {\r\n            return <Text> Correct! </Text>;\r\n        } else {\r\n            return <Text> Wrong Answer </Text>;\r\n        }\r\n    }\r\n\r\n    return (\r\n      <View>\r\n        { displayResult() }\r\n        <Button\r\n          title=\"Next\"\r\n          onPress={() => navigation.navigate('Question')}\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n  ","import * as React from 'react';\nimport {NavigationContainer} from '@react-navigation/native';\nimport {createStackNavigator} from '@react-navigation/stack';\nimport QuestionScreen from './views/Question';\nimport ResultScreen from './views/result';\n\nconst Stack = createStackNavigator();\n\nexport default function MyStack() {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator \n        screenOptions={{\n          headerShown: false\n        }}>\n        <Stack.Screen name=\"Question\" component={QuestionScreen} />\n        <Stack.Screen name=\"Result\" component={ResultScreen} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}